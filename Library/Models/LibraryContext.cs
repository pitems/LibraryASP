// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable enable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Library.Models;

public partial class LibraryContext : DbContext
{
    public LibraryContext(DbContextOptions<LibraryContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Books> Books { get; set; }

    public virtual DbSet<User> User { get; set; }

    public virtual DbSet<UserBooks> UserBooks { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Books>(entity =>
        {
            entity.ToTable("books");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Amount).HasColumnName("amount");
            entity.Property(e => e.AuthorName)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("author_name");
            entity.Property(e => e.BookName)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("book_name");
            entity.Property(e => e.Rented).HasColumnName("rented");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.ToTable("user");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.BooksRented).HasColumnName("books_rented");
            entity.Property(e => e.RentLimit).HasColumnName("rent_limit");
        });

        modelBuilder.Entity<UserBooks>(entity =>
        {
            entity.ToTable("user_books");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.FkBooks).HasColumnName("FK_books");
            entity.Property(e => e.FkUser).HasColumnName("FK_user");

            entity.HasOne(d => d.FkBooksNavigation).WithMany(p => p.UserBooks)
                .HasForeignKey(d => d.FkBooks)
                .HasConstraintName("FK_user_books_books");

            entity.HasOne(d => d.FkUserNavigation).WithMany(p => p.UserBooks)
                .HasForeignKey(d => d.FkUser)
                .HasConstraintName("FK_user_books_user");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}